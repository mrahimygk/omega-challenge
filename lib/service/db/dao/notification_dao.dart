import 'package:omega/model/Autogenerated.dart';
import 'package:omega/service/db/dao/dao.dart';

class NotificationDao implements Dao<Notification> {
  @override
  String get createTableQuery => 'create table $notificationTable ('
      '$notificationColArticleId num, '
      '$notificationColTitle text, '
      '$notificationColContent text, '
      '$notificationColDescription text, '
      '$notificationColUrl text, '
      '$notificationColUserDisplayName text, '
      '$notificationColShortDescriptionLenght num, '
      '$notificationColShortTitleLenght num, '
      '$notificationColPublishDate text, '
      '$notificationColCreateDate text, '
      '$notificationColApprovedDate text, '
      '$notificationColExpireDate text, '
      '$notificationColUpdateDate text, '
      '$notificationColLastViewDate text, '
      '$notificationColShamsiPublishDate text, '
      '$notificationColShamsiCreateDate text, '
      '$notificationColShamsiApprovedDate text, '
      '$notificationColShamsiExpireDate text, '
      '$notificationColShamsiUpdateDate text, '
      '$notificationColShamsiLastViewDate text, '
      '$notificationColCreateByUser text, '
      '$notificationColApprovedByUser text, '
//      '$notificationColExtraFieldValues text, '
      '$notificationColRelatedUrl text, '
//      '$notificationColCategory text, '
      '$notificationColCategoryName text, '
      '$notificationColImageUrl text, '
      '$notificationColVoteTotal num, '
      '$notificationColVoteNumber num, '
      '$notificationColPoId num, '
      '$notificationColPortalId text, '
      '$notificationHasSeen text '
      ')';

  @override
  Map<String, dynamic> toMap(Notification object) {
    return <String, dynamic>{
      notificationColArticleId: object.articleId,
      notificationColTitle: object.title,
      notificationColContent: object.content,
      notificationColDescription: object.description,
      notificationColUrl: object.url,
      notificationColUserDisplayName: object.userDisplayName,
      notificationColShortDescriptionLenght: object.shortDescriptionLenght,
      notificationColShortTitleLenght: object.shortTitleLenght,
      notificationColPublishDate: object.publishDate,
      notificationColCreateDate: object.createDate,
      notificationColApprovedDate: object.approvedDate,
      notificationColExpireDate: object.expireDate,
      notificationColUpdateDate: object.updateDate,
      notificationColLastViewDate: object.lastViewDate,
      notificationColShamsiPublishDate: object.shamsiPublishDate,
      notificationColShamsiCreateDate: object.shamsiCreateDate,
      notificationColShamsiApprovedDate: object.shamsiApprovedDate,
      notificationColShamsiExpireDate: object.shamsiExpireDate,
      notificationColShamsiUpdateDate: object.shamsiUpdateDate,
      notificationColShamsiLastViewDate: object.shamsiLastViewDate,
      notificationColCreateByUser: object.createByUser,
      notificationColApprovedByUser: object.approvedByUser,
//      notificationColExtraFieldValues: object.extraFieldValues.map((fv) {
//        fv.toJson();
//      }).toList().toString(),
      notificationColRelatedUrl: object.relatedUrl,
//      notificationColCategory: object.category,
      notificationColCategoryName: object.categoryName,
      notificationColImageUrl: object.imageUrl,
      notificationColVoteTotal: object.voteTotal,
      notificationColVoteNumber: object.voteNumber,
      notificationColPoId: object.poId,
      notificationColPortalId: object.portalId,
      notificationHasSeen: object.hasSeen.toString(),
    };
  }

  @override
  List<Notification> fromList(List<Map<String, dynamic>> query) {
    List<Notification> res = List<Notification>();
    for (Map map in query) {
      res.add(fromMap(map));
    }

    return res;
  }

  @override
  Notification fromMap(Map<String, dynamic> query) => Notification(
        query[notificationColArticleId],
        query[notificationColTitle],
        query[notificationColContent],
        query[notificationColDescription],
        query[notificationColUrl],
        query[notificationColUserDisplayName],
        query[notificationColShortDescriptionLenght],
        query[notificationColShortTitleLenght],
        query[notificationColPublishDate],
        query[notificationColCreateDate],
        query[notificationColApprovedDate],
        query[notificationColExpireDate],
        query[notificationColUpdateDate],
        query[notificationColLastViewDate],
        query[notificationColShamsiPublishDate],
        query[notificationColShamsiCreateDate],
        query[notificationColShamsiApprovedDate],
        query[notificationColShamsiExpireDate],
        query[notificationColShamsiUpdateDate],
        query[notificationColShamsiLastViewDate],
        query[notificationColCreateByUser],
        query[notificationColApprovedByUser],
//        query[notificationColExtraFieldValues],
        query[notificationColRelatedUrl],
//        query[notificationColCategory],
        query[notificationColCategoryName],
        query[notificationColImageUrl],
        query[notificationColVoteTotal],
        query[notificationColVoteNumber],
        query[notificationColPoId],
        query[notificationColPortalId],
        query[notificationHasSeen].toString()=='true',
      );
}

const notificationTable = 'notification';
const notificationColArticleId = 'articleId';
const notificationColTitle = 'title';
const notificationColContent = 'content';
const notificationColDescription = 'description';
const notificationColUrl = 'url';
const notificationColUserDisplayName = 'userDisplayName';
const notificationColShortDescriptionLenght = 'shortDescriptionLenght';
const notificationColShortTitleLenght = 'shortTitleLenght';
const notificationColPublishDate = 'publishDate';
const notificationColCreateDate = 'createDate';
const notificationColApprovedDate = 'approvedDate';
const notificationColExpireDate = 'expireDate';
const notificationColUpdateDate = 'updateDate';
const notificationColLastViewDate = 'lastViewDate';
const notificationColShamsiPublishDate = 'shamsiPublishDate';
const notificationColShamsiCreateDate = 'shamsiCreateDate';
const notificationColShamsiApprovedDate = 'shamsiApprovedDate';
const notificationColShamsiExpireDate = 'shamsiExpireDate';
const notificationColShamsiUpdateDate = 'shamsiUpdateDate';
const notificationColShamsiLastViewDate = 'shamsiLastViewDate';
const notificationColCreateByUser = 'createByUser';
const notificationColApprovedByUser = 'approvedByUser';
//const notificationColExtraFieldValues = 'extraFieldValues';
const notificationColRelatedUrl = 'relatedUrl';
//const notificationColCategory = 'category';
const notificationColCategoryName = 'categoryName';
const notificationColImageUrl = 'imageUrl';
const notificationColVoteTotal = 'voteTotal';
const notificationColVoteNumber = 'voteNumber';
const notificationColPoId = 'poId';
const notificationColPortalId = 'portalId';
const notificationHasSeen = 'hasSeen';
